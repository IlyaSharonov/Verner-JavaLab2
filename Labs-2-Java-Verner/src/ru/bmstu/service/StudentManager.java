package ru.bmstu.service;

import ru.bmstu.domain.Student;
import ru.bmstu.domain.parking.ParkingPass;
import ru.bmstu.service.parking.ParkingPassService;
import ru.bmstu.utils.ConsoleColors;

import java.util.*;

public class StudentManager {
    private List<Student> students;
    private ParkingPassService parkingService;
    private Scanner scanner;

    public StudentManager(ParkingPassService parkingService) {
        this.students = new ArrayList<>();
        this.parkingService = parkingService;
        this.scanner = new Scanner(System.in);
    }

    public void addStudent(Student student, boolean needPass) {
        students.add(student);
        System.out.println(ConsoleColors.GREEN + "‚úÖ –°—Ç—É–¥–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω!" + ConsoleColors.RESET);

        if (needPass) {
            System.out.println(ConsoleColors.CYAN + "üöó –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞..." + ConsoleColors.RESET);
            createParkingPassForStudent(student);
        }
    }

    public void updateStudent(int index) {
        if (index < 0 || index >= students.size()) {
            System.out.println(ConsoleColors.RED + "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å —Å—Ç—É–¥–µ–Ω—Ç–∞!" + ConsoleColors.RESET);
            return;
        }

        Student student = students.get(index);
        System.out.println(ConsoleColors.YELLOW + "‚úèÔ∏è  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞: " + student.getFirstName() + " " + student.getSecondName() + ConsoleColors.RESET);

        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è: ");
        String firstName = scanner.nextLine();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ñ–∞–º–∏–ª–∏—é: ");
        String secondName = scanner.nextLine();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç: ");
        int age = Integer.parseInt(scanner.nextLine());
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: ");
        String phone = scanner.nextLine();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É: ");
        String group = scanner.nextLine();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å: ");
        int course = Integer.parseInt(scanner.nextLine());

        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ —Å–µ—Ç—Ç–µ—Ä—ã
        student.setAge(age);
        student.setPhone(phone);
        student.setGroup(group);
        student.setCourse(course);

        System.out.println(ConsoleColors.GREEN + "‚úÖ –î–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!" + ConsoleColors.RESET);
    }

    public void displayAllStudents() {
        if (students.isEmpty()) {
            System.out.println(ConsoleColors.YELLOW + "üì≠ –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø—É—Å—Ç!" + ConsoleColors.RESET);
            return;
        }

        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç —Å—Ç–∞—Ä—à–∏—Ö –∫—É—Ä—Å–æ–≤ –∫ –º–ª–∞–¥—à–∏–º
        List<Student> sortedStudents = new ArrayList<>(students);
        sortedStudents.sort((s1, s2) -> Integer.compare(s2.getCourse(), s1.getCourse()));

        System.out.println(ConsoleColors.CYAN_BOLD + "\nüéì –°–ü–ò–°–û–ö –°–¢–£–î–ï–ù–¢–û–í (–æ—Ç —Å—Ç–∞—Ä—à–∏—Ö –∫—É—Ä—Å–æ–≤ –∫ –º–ª–∞–¥—à–∏–º):" + ConsoleColors.RESET);
        System.out.println("‚îÄ".repeat(80));

        for (int i = 0; i < sortedStudents.size(); i++) {
            Student student = sortedStudents.get(i);
            System.out.printf(ConsoleColors.YELLOW + "%d. " + ConsoleColors.RESET, i + 1);
            System.out.printf("üë§ %s %s | üéØ –ö—É—Ä—Å: %d | üè∑Ô∏è  –ì—Ä—É–ø–ø–∞: %s | üìû %s\n",
                    student.getFirstName(), student.getSecondName(),
                    student.getCourse(), student.getGroup(),
                    student.getPhone() != null ? student.getPhone() : "–Ω–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞");
        }
        System.out.println("‚îÄ".repeat(80));
    }

    public void issueParkingPass() {
        if (students.isEmpty()) {
            System.out.println(ConsoleColors.RED + "‚ùå –ù–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—ã–¥–∞—á–∏ –ø—Ä–æ–ø—É—Å–∫–∞!" + ConsoleColors.RESET);
            return;
        }

        displayAllStudents();
        System.out.print(ConsoleColors.CYAN + "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ –ø—Ä–æ–ø—É—Å–∫–∞: " + ConsoleColors.RESET);
        int choice = Integer.parseInt(scanner.nextLine()) - 1;

        if (choice >= 0 && choice < students.size()) {
            Student student = students.get(choice);
            createParkingPassForStudent(student);
        } else {
            System.out.println(ConsoleColors.RED + "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!" + ConsoleColors.RESET);
        }
    }

    public void revokeParkingPass() {
        if (students.isEmpty()) {
            System.out.println(ConsoleColors.RED + "‚ùå –ù–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤!" + ConsoleColors.RESET);
            return;
        }

        // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å –ø—Ä–æ–ø—É—Å–∫–∞–º–∏
        List<Student> studentsWithPasses = new ArrayList<>();
        List<String> passNumbers = new ArrayList<>();

        for (Student student : students) {
            for (ParkingPass pass : parkingService.getAllPasses()) {
                if (pass.getOwner().equals(student)) {
                    studentsWithPasses.add(student);
                    passNumbers.add(pass.getPassNumber());
                }
            }
        }

        if (studentsWithPasses.isEmpty()) {
            System.out.println(ConsoleColors.YELLOW + "üì≠ –ù–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø—Ä–æ–ø—É—Å–∫–∞–º–∏!" + ConsoleColors.RESET);
            return;
        }

        System.out.println(ConsoleColors.CYAN_BOLD + "\nüöó –°–¢–£–î–ï–ù–¢–´ –° –ü–†–û–ü–£–°–ö–ê–ú–ò:" + ConsoleColors.RESET);
        for (int i = 0; i < studentsWithPasses.size(); i++) {
            Student student = studentsWithPasses.get(i);
            System.out.printf(ConsoleColors.YELLOW + "%d. " + ConsoleColors.RESET +
                            "%s %s | üè∑Ô∏è  –ü—Ä–æ–ø—É—Å–∫: %s\n", i + 1,
                    student.getFirstName(), student.getSecondName(), passNumbers.get(i));
        }

        System.out.print(ConsoleColors.CYAN + "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–ª—è –∏–∑—ä—è—Ç–∏—è –ø—Ä–æ–ø—É—Å–∫–∞: " + ConsoleColors.RESET);
        int choice = Integer.parseInt(scanner.nextLine()) - 1;

        if (choice >= 0 && choice < studentsWithPasses.size()) {
            String passNumber = passNumbers.get(choice);
            parkingService.deactivatePass(passNumber);
            System.out.println(ConsoleColors.GREEN + "‚úÖ –ü—Ä–æ–ø—É—Å–∫ " + passNumber + " –æ—Ç–æ–∑–≤–∞–Ω!" + ConsoleColors.RESET);
        }
    }

    private void createParkingPassForStudent(Student student) {
        System.out.println(ConsoleColors.CYAN + "\nüöó –û–§–û–†–ú–õ–ï–ù–ò–ï –ü–ê–†–ö–û–í–û–ß–ù–û–ì–û –ü–†–û–ü–£–°–ö–ê" + ConsoleColors.RESET);
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –º–∞—Ä–∫—É –∞–≤—Ç–æ–º–æ–±–∏–ª—è: ");
        String brand = scanner.nextLine();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–æ–±–∏–ª—è: ");
        String model = scanner.nextLine();
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –≥–æ—Å. –Ω–æ–º–µ—Ä: ");
        String licensePlate = scanner.nextLine();

        String passNumber = "P" + String.format("%03d", parkingService.getAllPasses().size() + 1);
        parkingService.createParkingPass(passNumber, student, brand, model, licensePlate);

        System.out.println(ConsoleColors.GREEN + "‚úÖ –ü—Ä–æ–ø—É—Å–∫ " + passNumber + " –æ—Ñ–æ—Ä–º–ª–µ–Ω –¥–ª—è " +
                student.getFirstName() + " " + student.getSecondName() + ConsoleColors.RESET);
    }

    public List<Student> getStudents() {
        return students;
    }
}